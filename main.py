# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.12
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets, QtChart
from PIL import Image
import io
import sys

class Ui_MainWindow(QtWidgets.QMainWindow):
    image_name = None
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1440, 900)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(210, 140, 441, 291))
        self.graphicsView.setObjectName("graphicsView")
        self.chartview = QtChart.QChartView(self.centralwidget)
        self.chartview.setGeometry(QtCore.QRect(190, 470, 1021, 371))
        self.chartview.setObjectName("chartview")
        self.title = QtWidgets.QLabel(self.centralwidget)
        self.title.setGeometry(QtCore.QRect(590, 10, 241, 21))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.title.setFont(font)
        self.title.setObjectName("title")
        self.subtitle = QtWidgets.QLabel(self.centralwidget)
        self.subtitle.setGeometry(QtCore.QRect(590, 40, 241, 21))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.subtitle.setFont(font)
        self.subtitle.setObjectName("subtitle")
        self.subtitle_3 = QtWidgets.QLabel(self.centralwidget)
        self.subtitle_3.setGeometry(QtCore.QRect(590, 70, 251, 16))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.subtitle_3.setFont(font)
        self.subtitle_3.setObjectName("subtitle_3")
        self.subtitle_1stimg = QtWidgets.QLabel(self.centralwidget)
        self.subtitle_1stimg.setGeometry(QtCore.QRect(360, 100, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.subtitle_1stimg.setFont(font)
        self.subtitle_1stimg.setObjectName("subtitle_1stimg")
        self.subtitle_2ndimg = QtWidgets.QLabel(self.centralwidget)
        self.subtitle_2ndimg.setGeometry(QtCore.QRect(940, 100, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.subtitle_2ndimg.setFont(font)
        self.subtitle_2ndimg.setObjectName("subtitle_2ndimg")
        self.subtitle_chart = QtWidgets.QLabel(self.centralwidget)
        self.subtitle_chart.setGeometry(QtCore.QRect(680, 450, 59, 16))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.subtitle_chart.setFont(font)
        self.subtitle_chart.setObjectName("subtitle_chart")
        self.graphicsView_2 = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_2.setGeometry(QtCore.QRect(760, 140, 441, 291))
        self.graphicsView_2.setObjectName("graphicsView_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1440, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuFlip = QtWidgets.QMenu(self.menuEdit)
        self.menuFlip.setObjectName("menuFlip")
        self.menuLayer = QtWidgets.QMenu(self.menuEdit)
        self.menuLayer.setObjectName("menuLayer")
        self.menuGrayscale = QtWidgets.QMenu(self.menuEdit)
        self.menuGrayscale.setObjectName("menuGrayscale")
        self.menuBlack_White = QtWidgets.QMenu(self.menuEdit)
        self.menuBlack_White.setObjectName("menuBlack_White")
        self.menuQuantization = QtWidgets.QMenu(self.menuEdit)
        self.menuQuantization.setObjectName("menuQuantization")
        self.menuBrightness = QtWidgets.QMenu(self.menuEdit)
        self.menuBrightness.setObjectName("menuBrightness")
        self.menuContrast = QtWidgets.QMenu(self.menuEdit)
        self.menuContrast.setObjectName("menuContrast")
        self.menuFilter = QtWidgets.QMenu(self.menuEdit)
        self.menuFilter.setObjectName("menuFilter")
        self.menuNoise = QtWidgets.QMenu(self.menuEdit)
        self.menuNoise.setObjectName("menuNoise")
        self.menuGaussian = QtWidgets.QMenu(self.menuNoise)
        self.menuGaussian.setObjectName("menuGaussian")
        self.menuSpeckle = QtWidgets.QMenu(self.menuNoise)
        self.menuSpeckle.setObjectName("menuSpeckle")
        self.menuSalt_and_Pepper = QtWidgets.QMenu(self.menuNoise)
        self.menuSalt_and_Pepper.setObjectName("menuSalt_and_Pepper")
        self.menuMethod = QtWidgets.QMenu(self.menuEdit)
        self.menuMethod.setObjectName("menuMethod")
        self.menuSharpness = QtWidgets.QMenu(self.menuEdit)
        self.menuSharpness.setObjectName("menuSharpness")
        self.menuInvers = QtWidgets.QMenu(self.menuEdit)
        self.menuInvers.setObjectName("menuInvers")
        self.menuAutolevel = QtWidgets.QMenu(self.menuEdit)
        self.menuAutolevel.setObjectName("menuAutolevel")
        self.menuDetection = QtWidgets.QMenu(self.menuEdit)
        self.menuDetection.setObjectName("menuDetection")
        self.menuLine = QtWidgets.QMenu(self.menuDetection)
        self.menuLine.setObjectName("menuLine")
        self.menuRotate = QtWidgets.QMenu(self.menuEdit)
        self.menuRotate.setObjectName("menuRotate")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuHistogram = QtWidgets.QMenu(self.menuView)
        self.menuHistogram.setObjectName("menuHistogram")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionOpen.triggered.connect(self.open_image)
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionCopy.triggered.connect(self.copy_image)
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSave.triggered.connect(self.save_image)
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionQuit.triggered.connect(self.exit_program)
        self.actionHorizontal = QtWidgets.QAction(MainWindow)
        self.actionHorizontal.setObjectName("actionHorizontal")
        self.actionHorizontal.triggered.connect(lambda: self.flip_image(-1, 1))
        self.actionVertical = QtWidgets.QAction(MainWindow)
        self.actionVertical.setObjectName("actionVertical")
        self.actionVertical.triggered.connect(lambda: self.flip_image(1, -1))
        self.actionLayer_red = QtWidgets.QAction(MainWindow)
        self.actionLayer_red.setObjectName("actionLayer_red")
        self.actionLayer_red.triggered.connect(lambda: self.layer_image(1))
        self.actionLayer_green = QtWidgets.QAction(MainWindow)
        self.actionLayer_green.setObjectName("actionLayer_green")
        self.actionLayer_green.triggered.connect(lambda: self.layer_image(2))
        self.actionLayer_blue = QtWidgets.QAction(MainWindow)
        self.actionLayer_blue.setObjectName("actionLayer_blue")
        self.actionLayer_blue.triggered.connect(lambda: self.layer_image(3))
        self.actionGrayscale_original = QtWidgets.QAction(MainWindow)
        self.actionGrayscale_original.setObjectName("actionGrayscale_original")
        self.actionGrayscale_red = QtWidgets.QAction(MainWindow)
        self.actionGrayscale_red.setObjectName("actionGrayscale_red")
        self.actionGrayscale_green = QtWidgets.QAction(MainWindow)
        self.actionGrayscale_green.setObjectName("actionGrayscale_green")
        self.actionGrayscale_blue = QtWidgets.QAction(MainWindow)
        self.actionGrayscale_blue.setObjectName("actionGrayscale_blue")
        self.actionTreshold = QtWidgets.QAction(MainWindow)
        self.actionTreshold.setObjectName("actionTreshold")
        self.actionTreshold_Average = QtWidgets.QAction(MainWindow)
        self.actionTreshold_Average.setObjectName("actionTreshold_Average")
        self.actionOriginal = QtWidgets.QAction(MainWindow)
        self.actionOriginal.setObjectName("actionOriginal")
        self.actionTreshold_Average_2 = QtWidgets.QAction(MainWindow)
        self.actionTreshold_Average_2.setObjectName("actionTreshold_Average_2")
        self.actionTreshold_100 = QtWidgets.QAction(MainWindow)
        self.actionTreshold_100.setObjectName("actionTreshold_100")
        self.actionTreshold_200 = QtWidgets.QAction(MainWindow)
        self.actionTreshold_200.setObjectName("actionTreshold_200")
        self.action8 = QtWidgets.QAction(MainWindow)
        self.action8.setObjectName("action8")
        self.action32 = QtWidgets.QAction(MainWindow)
        self.action32.setObjectName("action32")
        self.action64 = QtWidgets.QAction(MainWindow)
        self.action64.setObjectName("action64")
        self.actionLow_brightness = QtWidgets.QAction(MainWindow)
        self.actionLow_brightness.setObjectName("actionLow_brightness")
        self.actionMedium_brightness = QtWidgets.QAction(MainWindow)
        self.actionMedium_brightness.setObjectName("actionMedium_brightness")
        self.actionHigh_brightness = QtWidgets.QAction(MainWindow)
        self.actionHigh_brightness.setObjectName("actionHigh_brightness")
        self.actionLow_contrast = QtWidgets.QAction(MainWindow)
        self.actionLow_contrast.setObjectName("actionLow_contrast")
        self.actionHigh_contrast = QtWidgets.QAction(MainWindow)
        self.actionHigh_contrast.setObjectName("actionHigh_contrast")
        self.actionMedium_contrast = QtWidgets.QAction(MainWindow)
        self.actionMedium_contrast.setObjectName("actionMedium_contrast")
        self.actionHigh_Contrast = QtWidgets.QAction(MainWindow)
        self.actionHigh_Contrast.setObjectName("actionHigh_Contrast")
        self.actionCDF = QtWidgets.QAction(MainWindow)
        self.actionCDF.setObjectName("actionCDF")
        self.actionPDF = QtWidgets.QAction(MainWindow)
        self.actionPDF.setObjectName("actionPDF")
        self.actionOriginal_histogram = QtWidgets.QAction(MainWindow)
        self.actionOriginal_histogram.setObjectName("actionOriginal_histogram")
        self.actionEqualization = QtWidgets.QAction(MainWindow)
        self.actionEqualization.setObjectName("actionEqualization")
        self.action4_Node = QtWidgets.QAction(MainWindow)
        self.action4_Node.setObjectName("action4_Node")
        self.action8_Node = QtWidgets.QAction(MainWindow)
        self.action8_Node.setObjectName("action8_Node")
        self.action5 = QtWidgets.QAction(MainWindow)
        self.action5.setObjectName("action5")
        self.action10 = QtWidgets.QAction(MainWindow)
        self.action10.setObjectName("action10")
        self.action20 = QtWidgets.QAction(MainWindow)
        self.action20.setObjectName("action20")
        self.action30 = QtWidgets.QAction(MainWindow)
        self.action30.setObjectName("action30")
        self.action40 = QtWidgets.QAction(MainWindow)
        self.action40.setObjectName("action40")
        self.action5_2 = QtWidgets.QAction(MainWindow)
        self.action5_2.setObjectName("action5_2")
        self.action10_2 = QtWidgets.QAction(MainWindow)
        self.action10_2.setObjectName("action10_2")
        self.action20_2 = QtWidgets.QAction(MainWindow)
        self.action20_2.setObjectName("action20_2")
        self.action30_2 = QtWidgets.QAction(MainWindow)
        self.action30_2.setObjectName("action30_2")
        self.action40_2 = QtWidgets.QAction(MainWindow)
        self.action40_2.setObjectName("action40_2")
        self.action5_3 = QtWidgets.QAction(MainWindow)
        self.action5_3.setObjectName("action5_3")
        self.action10_3 = QtWidgets.QAction(MainWindow)
        self.action10_3.setObjectName("action10_3")
        self.action20_3 = QtWidgets.QAction(MainWindow)
        self.action20_3.setObjectName("action20_3")
        self.action30_3 = QtWidgets.QAction(MainWindow)
        self.action30_3.setObjectName("action30_3")
        self.action40_3 = QtWidgets.QAction(MainWindow)
        self.action40_3.setObjectName("action40_3")
        self.actionAverage = QtWidgets.QAction(MainWindow)
        self.actionAverage.setObjectName("actionAverage")
        self.actionGaussian_2 = QtWidgets.QAction(MainWindow)
        self.actionGaussian_2.setObjectName("actionGaussian_2")
        self.actionMedian = QtWidgets.QAction(MainWindow)
        self.actionMedian.setObjectName("actionMedian")
        self.actionRobert = QtWidgets.QAction(MainWindow)
        self.actionRobert.setObjectName("actionRobert")
        self.actionRobert_2 = QtWidgets.QAction(MainWindow)
        self.actionRobert_2.setObjectName("actionRobert_2")
        self.actionPrewitt = QtWidgets.QAction(MainWindow)
        self.actionPrewitt.setObjectName("actionPrewitt")
        self.actionSobel = QtWidgets.QAction(MainWindow)
        self.actionSobel.setObjectName("actionSobel")
        self.actionLaplacian = QtWidgets.QAction(MainWindow)
        self.actionLaplacian.setObjectName("actionLaplacian")
        self.actionLow_Pass_Filter = QtWidgets.QAction(MainWindow)
        self.actionLow_Pass_Filter.setObjectName("actionLow_Pass_Filter")
        self.actionHigh_Pass_Filter = QtWidgets.QAction(MainWindow)
        self.actionHigh_Pass_Filter.setObjectName("actionHigh_Pass_Filter")
        self.actionOriginal_invers = QtWidgets.QAction(MainWindow)
        self.actionOriginal_invers.setObjectName("actionOriginal_invers")
        self.actionNew_invers = QtWidgets.QAction(MainWindow)
        self.actionNew_invers.setObjectName("actionNew_invers")
        self.actionOriginal_autolevel = QtWidgets.QAction(MainWindow)
        self.actionOriginal_autolevel.setObjectName("actionOriginal_autolevel")
        self.actionNew_autolevel = QtWidgets.QAction(MainWindow)
        self.actionNew_autolevel.setObjectName("actionNew_autolevel")
        self.actionOriginal_sharpness = QtWidgets.QAction(MainWindow)
        self.actionOriginal_sharpness.setObjectName("actionOriginal_sharpness")
        self.actionEdge = QtWidgets.QAction(MainWindow)
        self.actionEdge.setObjectName("actionEdge")
        self.actionNode = QtWidgets.QAction(MainWindow)
        self.actionNode.setObjectName("actionNode")
        self.actionHorizontal_line = QtWidgets.QAction(MainWindow)
        self.actionHorizontal_line.setObjectName("actionHorizontal_line")
        self.actionVertical_line = QtWidgets.QAction(MainWindow)
        self.actionVertical_line.setObjectName("actionVertical_line")
        self.actionAverage_and_Prewitt = QtWidgets.QAction(MainWindow)
        self.actionAverage_and_Prewitt.setObjectName("actionAverage_and_Prewitt")
        self.action90 = QtWidgets.QAction(MainWindow)
        self.action90.setObjectName("action90")
        self.action90.triggered.connect(lambda: self.rotate_image(90))
        self.action180 = QtWidgets.QAction(MainWindow)
        self.action180.setObjectName("action180")
        self.action180.triggered.connect(lambda: self.rotate_image(180))
        self.action270 = QtWidgets.QAction(MainWindow)
        self.action270.setObjectName("action270")
        self.action270.triggered.connect(lambda: self.rotate_image(270))
        self.action360 = QtWidgets.QAction(MainWindow)
        self.action360.setObjectName("action360")
        self.action360.triggered.connect(lambda: self.rotate_image(360))
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionCopy)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionQuit)
        self.menuFlip.addAction(self.actionHorizontal)
        self.menuFlip.addAction(self.actionVertical)
        self.menuLayer.addAction(self.actionLayer_red)
        self.menuLayer.addAction(self.actionLayer_green)
        self.menuLayer.addAction(self.actionLayer_blue)
        self.menuGrayscale.addAction(self.actionGrayscale_original)
        self.menuGrayscale.addAction(self.actionGrayscale_red)
        self.menuGrayscale.addAction(self.actionGrayscale_green)
        self.menuGrayscale.addAction(self.actionGrayscale_blue)
        self.menuBlack_White.addAction(self.actionOriginal)
        self.menuBlack_White.addAction(self.actionTreshold_Average_2)
        self.menuBlack_White.addAction(self.actionTreshold_100)
        self.menuBlack_White.addAction(self.actionTreshold_200)
        self.menuQuantization.addAction(self.action8)
        self.menuQuantization.addAction(self.action32)
        self.menuQuantization.addAction(self.action64)
        self.menuBrightness.addAction(self.actionLow_brightness)
        self.menuBrightness.addAction(self.actionMedium_brightness)
        self.menuBrightness.addAction(self.actionHigh_brightness)
        self.menuContrast.addAction(self.actionLow_contrast)
        self.menuContrast.addAction(self.actionMedium_contrast)
        self.menuContrast.addAction(self.actionHigh_Contrast)
        self.menuFilter.addAction(self.action4_Node)
        self.menuFilter.addAction(self.action8_Node)
        self.menuFilter.addAction(self.actionAverage)
        self.menuFilter.addAction(self.actionGaussian_2)
        self.menuFilter.addAction(self.actionMedian)
        self.menuGaussian.addAction(self.action5)
        self.menuGaussian.addAction(self.action10)
        self.menuGaussian.addAction(self.action20)
        self.menuGaussian.addAction(self.action30)
        self.menuGaussian.addAction(self.action40)
        self.menuSpeckle.addAction(self.action5_2)
        self.menuSpeckle.addAction(self.action10_2)
        self.menuSpeckle.addAction(self.action20_2)
        self.menuSpeckle.addAction(self.action30_2)
        self.menuSpeckle.addAction(self.action40_2)
        self.menuSalt_and_Pepper.addAction(self.action5_3)
        self.menuSalt_and_Pepper.addAction(self.action10_3)
        self.menuSalt_and_Pepper.addAction(self.action20_3)
        self.menuSalt_and_Pepper.addAction(self.action30_3)
        self.menuSalt_and_Pepper.addAction(self.action40_3)
        self.menuNoise.addAction(self.menuGaussian.menuAction())
        self.menuNoise.addAction(self.menuSpeckle.menuAction())
        self.menuNoise.addAction(self.menuSalt_and_Pepper.menuAction())
        self.menuMethod.addAction(self.actionRobert_2)
        self.menuMethod.addAction(self.actionPrewitt)
        self.menuMethod.addAction(self.actionSobel)
        self.menuMethod.addAction(self.actionLaplacian)
        self.menuSharpness.addAction(self.actionOriginal_sharpness)
        self.menuSharpness.addAction(self.actionLow_Pass_Filter)
        self.menuSharpness.addAction(self.actionHigh_Pass_Filter)
        self.menuSharpness.addAction(self.actionAverage_and_Prewitt)
        self.menuInvers.addAction(self.actionOriginal_invers)
        self.menuInvers.addAction(self.actionNew_invers)
        self.menuAutolevel.addAction(self.actionOriginal_autolevel)
        self.menuAutolevel.addAction(self.actionNew_autolevel)
        self.menuLine.addAction(self.actionHorizontal_line)
        self.menuLine.addAction(self.actionVertical_line)
        self.menuDetection.addAction(self.actionEdge)
        self.menuDetection.addAction(self.actionNode)
        self.menuDetection.addAction(self.menuLine.menuAction())
        self.menuRotate.addAction(self.action90)
        self.menuRotate.addAction(self.action180)
        self.menuRotate.addAction(self.action270)
        self.menuRotate.addAction(self.action360)
        self.menuEdit.addAction(self.menuFlip.menuAction())
        self.menuEdit.addAction(self.menuRotate.menuAction())
        self.menuEdit.addAction(self.menuLayer.menuAction())
        self.menuEdit.addAction(self.menuGrayscale.menuAction())
        self.menuEdit.addAction(self.menuBlack_White.menuAction())
        self.menuEdit.addAction(self.menuQuantization.menuAction())
        self.menuEdit.addAction(self.menuBrightness.menuAction())
        self.menuEdit.addAction(self.menuContrast.menuAction())
        self.menuEdit.addAction(self.menuFilter.menuAction())
        self.menuEdit.addAction(self.menuNoise.menuAction())
        self.menuEdit.addAction(self.menuMethod.menuAction())
        self.menuEdit.addAction(self.menuSharpness.menuAction())
        self.menuEdit.addAction(self.menuInvers.menuAction())
        self.menuEdit.addAction(self.menuAutolevel.menuAction())
        self.menuEdit.addAction(self.menuDetection.menuAction())
        self.menuHistogram.addAction(self.actionOriginal_histogram)
        self.menuHistogram.addAction(self.actionEqualization)
        self.menuView.addAction(self.menuHistogram.menuAction())
        self.menuView.addAction(self.actionCDF)
        self.menuView.addAction(self.actionPDF)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.title.setText(_translate("MainWindow", "IMAGE PROCESSING"))
        self.subtitle.setText(_translate("MainWindow", "d e v e l o p   w i t h   p y t h o n 3"))
        self.subtitle_3.setText(_translate("MainWindow", "G U I   b y   P y Q T 5   a n d   l i b r a r y   b y   P i l l o w"))
        self.subtitle_1stimg.setText(_translate("MainWindow", "1st Image"))
        self.subtitle_2ndimg.setText(_translate("MainWindow", "2nd Image"))
        self.subtitle_chart.setText(_translate("MainWindow", "Chart"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuFlip.setTitle(_translate("MainWindow", "Flip"))
        self.menuLayer.setTitle(_translate("MainWindow", "Layer"))
        self.menuGrayscale.setTitle(_translate("MainWindow", "Grayscale"))
        self.menuBlack_White.setTitle(_translate("MainWindow", "Black White"))
        self.menuQuantization.setTitle(_translate("MainWindow", "Quantization"))
        self.menuBrightness.setTitle(_translate("MainWindow", "Brightness"))
        self.menuContrast.setTitle(_translate("MainWindow", "Contrast"))
        self.menuFilter.setTitle(_translate("MainWindow", "Filter"))
        self.menuNoise.setTitle(_translate("MainWindow", "Noise"))
        self.menuGaussian.setTitle(_translate("MainWindow", "Gaussian"))
        self.menuSpeckle.setTitle(_translate("MainWindow", "Speckle"))
        self.menuSalt_and_Pepper.setTitle(_translate("MainWindow", "Salt and Pepper"))
        self.menuMethod.setTitle(_translate("MainWindow", "Method"))
        self.menuSharpness.setTitle(_translate("MainWindow", "Sharpness"))
        self.menuInvers.setTitle(_translate("MainWindow", "Invers"))
        self.menuAutolevel.setTitle(_translate("MainWindow", "Autolevel"))
        self.menuDetection.setTitle(_translate("MainWindow", "Detection"))
        self.menuLine.setTitle(_translate("MainWindow", "Line"))
        self.menuRotate.setTitle(_translate("MainWindow", "Rotate"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuHistogram.setTitle(_translate("MainWindow", "Histogram"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionHorizontal.setText(_translate("MainWindow", "Horizontal"))
        self.actionVertical.setText(_translate("MainWindow", "Vertical"))
        self.actionLayer_red.setText(_translate("MainWindow", "Red"))
        self.actionLayer_green.setText(_translate("MainWindow", "Green"))
        self.actionLayer_blue.setText(_translate("MainWindow", "Blue"))
        self.actionGrayscale_original.setText(_translate("MainWindow", "Original"))
        self.actionGrayscale_red.setText(_translate("MainWindow", "Red"))
        self.actionGrayscale_green.setText(_translate("MainWindow", "Green"))
        self.actionGrayscale_blue.setText(_translate("MainWindow", "Blue"))
        self.actionTreshold.setText(_translate("MainWindow", "Treshold"))
        self.actionTreshold_Average.setText(_translate("MainWindow", "Treshold Average"))
        self.actionOriginal.setText(_translate("MainWindow", "Original"))
        self.actionTreshold_Average_2.setText(_translate("MainWindow", "Threshold Average"))
        self.actionTreshold_100.setText(_translate("MainWindow", "Threshold 100"))
        self.actionTreshold_200.setText(_translate("MainWindow", "Threshold 200"))
        self.action8.setText(_translate("MainWindow", "8"))
        self.action32.setText(_translate("MainWindow", "32"))
        self.action64.setText(_translate("MainWindow", "64"))
        self.actionLow_brightness.setText(_translate("MainWindow", "Low"))
        self.actionMedium_brightness.setText(_translate("MainWindow", "Medium"))
        self.actionHigh_brightness.setText(_translate("MainWindow", "High"))
        self.actionLow_contrast.setText(_translate("MainWindow", "Low"))
        self.actionHigh_contrast.setText(_translate("MainWindow", "High"))
        self.actionMedium_contrast.setText(_translate("MainWindow", "Medium"))
        self.actionHigh_Contrast.setText(_translate("MainWindow", "High"))
        self.actionCDF.setText(_translate("MainWindow", "CDF"))
        self.actionPDF.setText(_translate("MainWindow", "PDF"))
        self.actionOriginal_histogram.setText(_translate("MainWindow", "Original"))
        self.actionEqualization.setText(_translate("MainWindow", "Equalization"))
        self.action4_Node.setText(_translate("MainWindow", "4 Node"))
        self.action8_Node.setText(_translate("MainWindow", "8 Node"))
        self.action5.setText(_translate("MainWindow", "5%"))
        self.action10.setText(_translate("MainWindow", "10%"))
        self.action20.setText(_translate("MainWindow", "20%"))
        self.action30.setText(_translate("MainWindow", "30%"))
        self.action40.setText(_translate("MainWindow", "40%"))
        self.action5_2.setText(_translate("MainWindow", "5%"))
        self.action10_2.setText(_translate("MainWindow", "10%"))
        self.action20_2.setText(_translate("MainWindow", "20%"))
        self.action30_2.setText(_translate("MainWindow", "30%"))
        self.action40_2.setText(_translate("MainWindow", "40%"))
        self.action5_3.setText(_translate("MainWindow", "5%"))
        self.action10_3.setText(_translate("MainWindow", "10%"))
        self.action20_3.setText(_translate("MainWindow", "20%"))
        self.action30_3.setText(_translate("MainWindow", "30%"))
        self.action40_3.setText(_translate("MainWindow", "40%"))
        self.actionAverage.setText(_translate("MainWindow", "Average"))
        self.actionGaussian_2.setText(_translate("MainWindow", "Gaussian"))
        self.actionMedian.setText(_translate("MainWindow", "Median"))
        self.actionRobert.setText(_translate("MainWindow", "Robert"))
        self.actionRobert_2.setText(_translate("MainWindow", "Robert"))
        self.actionPrewitt.setText(_translate("MainWindow", "Prewitt"))
        self.actionSobel.setText(_translate("MainWindow", "Sobel"))
        self.actionLaplacian.setText(_translate("MainWindow", "Laplacian"))
        self.actionLow_Pass_Filter.setText(_translate("MainWindow", "Low Pass Filter"))
        self.actionHigh_Pass_Filter.setText(_translate("MainWindow", "High Pass Filter"))
        self.actionOriginal_invers.setText(_translate("MainWindow", "Original"))
        self.actionNew_invers.setText(_translate("MainWindow", "New"))
        self.actionOriginal_autolevel.setText(_translate("MainWindow", "Original"))
        self.actionNew_autolevel.setText(_translate("MainWindow", "New"))
        self.actionOriginal_sharpness.setText(_translate("MainWindow", "Original"))
        self.actionEdge.setText(_translate("MainWindow", "Edge"))
        self.actionNode.setText(_translate("MainWindow", "Node"))
        self.actionHorizontal_line.setText(_translate("MainWindow", "Horizontal"))
        self.actionVertical_line.setText(_translate("MainWindow", "Vertical"))
        self.actionAverage_and_Prewitt.setText(_translate("MainWindow", "Average and Prewitt"))
        self.action90.setText(_translate("MainWindow", "90"))
        self.action180.setText(_translate("MainWindow", "180"))
        self.action270.setText(_translate("MainWindow", "270"))
        self.action360.setText(_translate("MainWindow", "360"))

    def open_image(self):
        file_name = QtWidgets.QFileDialog.getOpenFileName(self, 'Open file', '/Users/oktaviacitra/ImageProcessing/project')[0]
        self.scene = QtWidgets.QGraphicsScene()
        self.image_name = QtGui.QImage(file_name)
        self.scene.addPixmap(QtGui.QPixmap.fromImage(self.image_name))
        self.graphicsView.setScene(self.scene)
        self.graphicsView.fitInView(self.scene.itemsBoundingRect())

    def save_image(self):
        file_name = QtWidgets.QFileDialog.getSaveFileName(self, 'Save file', '/Users/oktaviacitra/ImageProcessing/project')[0]
        QtGui.QPixmap.save(self.image_name, file_name, 'jpg', 100)

    def copy_image(self):
        self.show_image(QtGui.QPixmap.fromImage(self.image_name))
    
    def flip_image(self, x, y):
        self.image_name = self.image_name.transformed(QtGui.QTransform().scale(x, y))
        self.show_image(QtGui.QPixmap.fromImage(self.image_name))
    
    def rotate_image(self, angle):
        self.image_name = self.image_name.transformed(QtGui.QTransform().rotate(angle))
        self.show_image(QtGui.QPixmap.fromImage(self.image_name))

    def show_image(self, pixmap):
        self.scene = QtWidgets.QGraphicsScene()
        self.scene.addPixmap(pixmap)
        self.graphicsView_2.setScene(self.scene)
        self.graphicsView_2.fitInView(self.scene.itemsBoundingRect())

    def exit_program(self):
        sys.exit()

    def buffer_image(self, image):
        buffer = QtCore.QBuffer()
        buffer.open(QtCore.QBuffer.ReadWrite)
        image.save(buffer, "JPG")
        pil_im = Image.open(io.BytesIO(buffer.data()))
        pil_im.convert('RGB')
        width, height = pil_im.size
        return width, height

    def layer_image(self, choice):
        image = self.image_name
        width, height = self.buffer_image(image)
        for i in range(width):
            for j in range(height):
                r, g, b, a = QtGui.QColor(image.pixel(i ,j)).getRgb()
                if choice == 1:
                    image.setPixel(i, j, QtGui.QColor(r, 0, 0, a).rgb())
                elif choice == 2:
                    image.setPixel(i, j, QtGui.QColor(0, g, 0, a).rgb())
                elif choice == 3:
                    image.setPixel(i, j, QtGui.QColor(0, 0, b, a).rgb())
        self.show_image(QtGui.QPixmap.fromImage(image))

    # def pil2pixmap(self, im):
    #     if im.mode == "RGB":
    #         pass
    #     elif im.mode == "L":
    #         im = im.convert("RGBA")
    #     data = im.convert("RGBA").tobytes("raw", "RGBA")
    #     qim = QtGui.QImage(data, im.size[0], im.size[1], QtGui.QImage.Format_ARGB32)
    #     pixmap = QtGui.QPixmap.fromImage(qim)
    #     return pixmap

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
